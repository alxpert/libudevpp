////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef UDEV_UDEV_HPP
#define UDEV_UDEV_HPP

////////////////////////////////////////////////////////////////////////////////
namespace detail { struct udev; }

////////////////////////////////////////////////////////////////////////////////
namespace udev
{

class enumerate;
class monitor;

////////////////////////////////////////////////////////////////////////////////
// The udev.
//
// Used by the enumerate and monitor classes to get access to udev.
//
class udev
{
public:
    ////////////////////
    udev();
    ~udev() noexcept;

    udev(const udev&) = delete;
    udev(udev&&) = delete;

    udev& operator=(const udev&) = delete;
    udev& operator=(udev&&) = delete;

    ////////////////////
    bool valid() const noexcept { return udev_; }

private:
    ////////////////////
    detail::udev* udev_;

    friend class enumerate;
    friend class monitor;
};

////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
#endif
